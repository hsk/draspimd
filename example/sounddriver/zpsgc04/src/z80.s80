  .macro set_bank X
        ld      hl,$6000        ; load shift register with address
        
        ld      a,(X+1)         ; of sound data
        rlca
        ld      (hl),a          ; #1 (bit 7)

        ld      a,(X+2)
        ld      (hl),a          ; #2 (bit 0)
        rrca
        ld      (hl),a          ; #3
        rrca     
        ld      (hl),a          ; #4
        rrca     
        ld      (hl),a          ; #5
        rrca     
        ld      (hl),a          ; #6
        rrca     
        ld      (hl),a          ; #7
        rrca     
        ld      (hl),a          ; #8
        rrca     
        ld      (hl),a          ; #9 (bit 7)
  .endm

PSG_REG:    EQU     $7F11 ; PSG ポート
      ORG     $0000
BOOT: ; プログラム 開始位置
            ORG     $0000
            DI                              ; 割り込み禁止
            LD      SP, $2000               ; スタックポインタ初期化
            IM      1                       ; 割り込みMODE 1
            EI
            JP      INIT                    ; RESET
; 68000 とのデータやり取り

            BLOCK   $0010-$
            ORG     $0010
VINT:       DB      0     ; VINT
ENDF:       DB      0     ; 終了フラグ
POS:        DW      0     ; カウンタ
addr:                           ; address of sound data
        .byte    0,0,0
addr2:                           ; address of sound data
        .byte    0,0
; 割込み処理 --------------------------
            BLOCK   $0038-$
            ORG     $0038
VSYNC:      
            PUSH    AF                        ; AF 待避
            LD      A,$1
            LD      (VINT),A                ; カウンタをAに
            EI
            POP     AF                      ; AF 戻す
            RETI                            ; VSYNC割り込み終了
; 割り込み終了 -------------------------

INIT:
      LD      HL, PSG_REG  ; [10]
      EXX
      set_bank addr
      ld      A,(addr)        ; retrieve byte from $8000-$FFFF
      ld      L,A
      ld      A,(addr+1)
      or      $80
      ld      H,A
      LD SP, $2000         ; スタックを2000にする
      INC HL
      INC HL
      LD (addr2),HL         ; コピー長を取得
      DEC HL
      DEC HL
LOOP:
      LD A,0
      LD (VINT),A
      LD BC,(HL)
      INC HL
      LD DE,AAA
      LDIR
      LD A,$C9 ; ret 追加
      LD (DE),A
      EXX
POSSS:
      CALL AAA+1             ; [17] 関数呼び出し
      EXX
VWAIT:
      LD A,(VINT)
      AND A
      JP Z, VWAIT
      JP LOOP
AAA:
      RET
